parameters:
  buildConfig: ''
  archType: ''
  osGroup: ''
  osSubgroup: ''
  name: ''
  helixType: '(unspecified)'
  container: ''
  crossBuild: false
  liveLibrariesBuildConfig: ''
  strategy: ''
  pool: ''
  runtimeVariant: ''

  # arcade-specific parameters
  condition: true
  continueOnError: false
  dependsOn: ''
  dependOnEvaluatePaths: false
  displayName: ''
  timeoutInMinutes: ''
  enableMicrobuild: ''
  gatherAssetManifests: false

  variables: {} ## any extra variables to add to the defaults defined below

jobs:
- template: /eng/pipelines/common/templates/runtimes/xplat-job.yml
  parameters:
    buildConfig: ${{ parameters.buildConfig }}
    archType: ${{ parameters.archType }}
    osGroup: ${{ parameters.osGroup }}
    osSubgroup: ${{ parameters.osSubgroup }}
    name: ${{ parameters.name }}
    helixType: ${{ parameters.helixType }}
    container: ${{ parameters.container }}
    crossBuild: ${{ parameters.crossBuild }}
    strategy: ${{ parameters.strategy }}
    pool: ${{ parameters.pool }}
    runtimeVariant: ${{ parameters.runtimeVariant }}

    # arcade-specific parameters
    condition: and(succeeded(), ${{ parameters.condition }})
    continueOnError: ${{ parameters.continueOnError }}
    dependsOn: ${{ parameters.dependsOn }}
    dependOnEvaluatePaths: ${{ parameters.dependOnEvaluatePaths }}
    displayName: ${{ parameters.displayName }}
    timeoutInMinutes: ${{ parameters.timeoutInMinutes }}
    enableMicrobuild: ${{ parameters.enableMicrobuild }}
    gatherAssetManifests: ${{ parameters.gatherAssetManifests }}

    variables:
    - template: /eng/pipelines/common/templates/runtimes/native-test-assets-variables.yml
      parameters:
        runtimeFlavor: mono
        runtimeVariant: ${{ parameters.runtimeVariant }}

    - name: priorityArg
      value: ''

    - librariesBuildArtifactName: ''
    - librariesOverrideArg: ''
    - librariesDownloadDir: ''

    - ${{ if ne(parameters.liveLibrariesBuildConfig, '') }}:
      - librariesBuildArtifactName: ${{ format('libraries_bin_{0}{1}_{2}_{3}', parameters.osGroup, parameters.osSubgroup, parameters.archType, parameters.liveLibrariesBuildConfig) }}
      - librariesDownloadDir: $(Build.SourcesDirectory)/artifacts
      - librariesOverrideArg: ' /p:LibrariesConfiguration=${{ parameters.liveLibrariesBuildConfig }}'

    - ${{ each variable in parameters.variables }}:
      - ${{insert}}: ${{ variable }}

    steps: ${{ parameters.steps }}
